{"version":3,"file":"static/js/216.fc9ebe41.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Phonebook/Phonebook.styled.js","components/Phonebook/Phonebook.jsx","pages/ContactsPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import styled from 'styled-components';\n\nexport const ContactsListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: ${p => p.theme.space[11]}px;\n`;\n\nexport const ContactsItemStyled = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: ${p => p.theme.space[1]}px;\n`;\n\nexport const TextStyle = styled.p`\n  font-size: ${p => p.theme.fontSize[3]}px;\n`;\n","import {\n  ContactsListStyled,\n  ContactsItemStyled,\n  TextStyle,\n} from './Contacts.styled';\nimport { ButtonStyled } from '../Elements/Elements.styled';\nimport { selectFilterContacts } from '../../redux/contacts/selectors';\nimport { useSelector } from 'react-redux/es/exports';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nfunction ContactsList({ onDelete }) {\n  const contacts = useSelector(selectFilterContacts);\n  return (\n    <div>\n      <ContactsListStyled>\n        {contacts.map(({ id, name, number }) => (\n          <ContactsItemStyled key={nanoid(3)}>\n            <TextStyle>\n              {name}: {number}\n            </TextStyle>\n            <ButtonStyled type=\"button\" onClick={() => onDelete({ id })}>\n              Delete\n            </ButtonStyled>\n          </ContactsItemStyled>\n        ))}\n      </ContactsListStyled>\n    </div>\n  );\n}\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  onDelete: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 16px;\n  margin: 0 auto;\n  gap: 8px;\n  width: 400px;\n  border: 1px solid black;\n`;\n\nexport const InputStyled = styled(Field)`\n  font-size: ${p => p.theme.fontSize[2]}px;\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  width: ${p => p.theme.space[10]}px;\n  border: ${p => p.theme.border.normal};\n  border-radius: ${p => p.theme.radius.normal};\n  :hover {\n    border-color: ${p => p.theme.colors.colorComponentBg};\n    box-shadow: 0 0 4px 2px ${p => p.theme.colors.colorAccent};\n  }\n`;\n","import { selectContacts } from '../../redux/contacts/selectors';\nimport { addContacts } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { FormStyle, InputStyled } from './Form.styled';\nimport { ButtonStyled, LabelStyled } from '../Elements/Elements.styled';\nimport { Notify } from 'notiflix';\nimport { Formik } from 'formik';\n\nexport function FormInput() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    const contactInfo = {\n      name,\n      number,\n    };\n\n    if (contacts.find(contact => contact.name === name)) {\n      Notify.warning(`${name} is already in contacts`, {\n        timeout: 1000,\n        position: 'center-top',\n      });\n      return;\n    }\n\n    dispatch(addContacts(contactInfo));\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={handleSubmit}>\n      <FormStyle>\n        <LabelStyled>\n          Name\n          <InputStyled\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Enter name...\"\n            required\n          />\n        </LabelStyled>\n        <LabelStyled>\n          Number\n          <InputStyled\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Enter telephone number...\"\n            required\n          />\n        </LabelStyled>\n        <ButtonStyled type=\"submit\">Add contact</ButtonStyled>\n      </FormStyle>\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  margin-top: ${p => p.theme.space[3]}px;\n  display: flex;\n  flex-direction: column;\n  font-size: ${p => p.theme.fontSize[2]}px;\n  font-weight: ${p => p.theme.fontWeight.bold};\n`;\n","import { Label } from './Filter.styled';\nimport { InputStyled } from '../Elements/Elements.styled';\nimport { useDispatch } from 'react-redux/es/exports';\nimport { setNameFilter } from '../../redux/contacts/filterSlice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(setNameFilter(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <InputStyled type=\"text\" name=\"name\" onChange={onFilterChange} />\n    </Label>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const TitleStyle = styled.h2`\n  font-size: ${p => p.theme.fontSize[4]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n","import { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { selectIsLoading, selectError } from '../../redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContacts } from '../../redux/contacts/operations';\nimport ContactsList from '../Contacts/Contacts';\nimport { FormInput } from '../Form/Form';\nimport Filter from '../Filter/Filter';\nimport Box from 'components/Box';\nimport { TitleStyle } from './Phonebook.styled';\n\nfunction Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isError = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = ({ id }) => {\n    dispatch(deleteContacts(id));\n  };\n\n  return (\n    <Box\n      as={'section'}\n      m={40}\n      gridGap={16}\n      justifyContent=\"space-evenly\"\n      alignItems=\"flex-start\"\n    >\n      <div>\n        <TitleStyle>Add new phone contact</TitleStyle>\n        <FormInput />\n      </div>\n      <div>\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && <p>Loading...</p>}\n        {isError && (\n          <p style={{ color: 'red' }}>\n            Net error! Please, reload the page and try again...\n          </p>\n        )}\n        <ContactsList onDelete={handleDelete} />\n      </div>\n    </Box>\n  );\n}\n\nexport default Phonebook;\n","import Phonebook from \"components/Phonebook/Phonebook\";\n\nfunction ContactsPage() {\n    return <Phonebook/>\n}\n\nexport default ContactsPage;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterContacts","createSelector","filter","name","toLowerCase","includes","ContactsListStyled","styled","p","theme","space","ContactsItemStyled","TextStyle","fontSize","onDelete","useSelector","map","id","number","type","onClick","nanoid","FormStyle","Form","InputStyled","Field","border","normal","radius","colors","colorComponentBg","colorAccent","FormInput","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","contactInfo","find","contact","Notify","timeout","position","addContacts","pattern","title","placeholder","required","Label","fontWeight","bold","onChange","e","setNameFilter","currentTarget","value","TitleStyle","isError","useEffect","fetchContacts","Box","as","m","gridGap","justifyContent","alignItems","style","color","Contacts","deleteContacts"],"sourceRoot":""}